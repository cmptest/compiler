<program> -> <MT> main ( ) { <statements> }
<MT> -> int | void
<statements> -> <statement> <statements> | @
<statement> -> <declareStatement> | <conditionalStatement> | <loopStatement> | <jumpStatement>
<declareStatement> -> <dataType> <assignments> | <assignments>
<assignments> -> <variable> = <expression> , <assignments> | <variable> = <expression> ;
<assignments> -> <variable> , <assignments> | <variable> ;
<conditionalStatement> -> if ( <expression> ) { <statements> } <elseif> <else>
<elseif> -> else if ( <expression> ) { <statements> } <elseif> | @
<else> -> else  { <statements> } | @
<loopStatement> -> while ( <expression> ) { <statements> }
<jumpStatement> -> continue  ;| break ;
<variableAndConstant> -> <variable> | <constant> 
<variable> -> _ <variableTemp> | <letter> <variableTemp>
<variableTemp> -> <letter> <variableTemp> | <digit> <variableTemp> | _ <variableTemp> | @
<constant> -> <constantTemp> | <constantTemp> . <constantTemp>
<constantTemp> -> < digit > <constantTemp> | <digit>
<expression> -> <term> <expression¡¯> <expression¡¯¡¯>
<expression¡¯¡¯> -> <comparisonOperator> <expression> <expression¡¯¡¯> | @
<comparisonOperator> -> > | < | >= | <= | ==
<expression¡¯> -> + <term> <expression¡¯> | - <term> <expression¡¯> | @
<term> -> <factor> <term¡¯>
<term¡¯> -> * <factor> <term¡¯> | / <factor> <term¡¯> | @
<factor> -> <variableAndConstant> | ( <expression> )
<dataType> -> int | float | double | short | long | char
<digit> -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<letter> -> a | b | c | d | e | f | g | h | I | j | k | l | m | n | o | p | q | r |  s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z